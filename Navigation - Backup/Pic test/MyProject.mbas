program MyProject

dim ADCresult as word
    txt as char[6]

main:
  'PORTB = 0x0000       ' clear PORTB
  'TRISB = 0xFFFF
  TRISC.0 = 1
  TRISC.1 = 1
  TRISC.2 = 1
  TRISA.1 = 1
  TRISA.0 = 1
  TRISB.4 = 0
  TRISA.4 = 0
  TRISB.8 = 0
  TRISA.9 = 0
  TRISC.3 = 0
  TRISC.4 = 0
  TRISC.5 = 0
  TRISB.9 = 0
  TRISB.12 = 0
  TRISA.10 = 0
  TRISA.7 = 0
  TRISA.9=0
  LATB.4 = 1
  LATA.4 = 1
  LATB.8 = 1
  LATA.9 = 1
  LATC.3 = 1
  LATC.4 = 1
  LATC.5 = 1
  LATB.9 = 1
  LATB.12 = 1
  LATA.10 = 1
  LATA.7 = 1
  LATA.9=1
  
  Unlock_IOLOCK()

PPS_Mapping_NoLock(23, _INPUT, _U1RX)   ' Sets pin 2 of PIC as USB RX input
PPS_Mapping_NoLock(22, _OUTPUT, _U1TX)  ' Sets pin 3 of PIC as USB TX output
PPS_Mapping_NoLock(19, _INPUT, _U2RX)   ' Sets pin 4 of PIC as RS485 RX input
PPS_Mapping_NoLock(20, _OUTPUT, _U2TX)  ' Sets pin 5 of PIC as RS485 TX output
Lock_IOLOCK()
  
  ' IR on
  'TRISA.
  ADC1_Init()          ' Enable ADC module
  UART1_Init(9600)     ' Initialize UART communication

  while TRUE
    ADCresult = ADC1_Get_Sample(1)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 1 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(2)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 2 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(3)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 3 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(4)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 4 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(5)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 5 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(6)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 6 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(7)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 7 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(8)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 8 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(9)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 9 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(10)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 10 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(11)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 11 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
    ADCresult = ADC1_Get_Sample(12)   ' Acquire ADC sample
    WordToStr(ADCresult, txt)        ' convert its value to string
    UART1_Write_Text(" ADC 12 = ")
    UART1_Write_Text(txt)            ' and send it to UART terminal
    UART1_Write_Text("   ")
    Delay_ms(50)
  wend
end.